[{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://sciurus365.github.io/Isinglandr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://sciurus365.github.io/Isinglandr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jingmeng Cui. Author, maintainer. Gabriela Lunansky. Contributor.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cui J (2024). Isinglandr: Landscape Construction Simulation Ising Networks. R package version 0.1.1.9000, https://github.com/Sciurus365/Isinglandr, https://sciurus365.github.io/Isinglandr/.","code":"@Manual{,   title = {Isinglandr: Landscape Construction and Simulation for Ising Networks},   author = {Jingmeng Cui},   year = {2024},   note = {R package version 0.1.1.9000,     https://github.com/Sciurus365/Isinglandr},   url = {https://sciurus365.github.io/Isinglandr/}, }"},{"path":"https://sciurus365.github.io/Isinglandr/index.html","id":"isinglandr-landscape-construction-and-simulation-for-ising-networks-","dir":"","previous_headings":"","what":"Landscape Construction and Simulation for Ising Networks","title":"Landscape Construction and Simulation for Ising Networks","text":"toolbox constructing potential landscapes Ising networks. parameters networks can directly supplied users estimated IsingFit package van Borkulo Epskamp (2016) https://CRAN.R-project.org/package=IsingFit empirical data. Ising model’s Boltzmann distribution preserved potential landscape function. landscape functions can used quantifying visualizing stability network states, well visualizing simulation process.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Landscape Construction and Simulation for Ising Networks","text":"can install development version Isinglandr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Sciurus365/Isinglandr\")"},{"path":[]},{"path":"https://sciurus365.github.io/Isinglandr/index.html","id":"landscape-construction","dir":"","previous_headings":"Example","what":"Landscape construction","title":"Landscape Construction and Simulation for Ising Networks","text":"","code":"library(Isinglandr) #> Registered S3 method overwritten by 'Isinglandr': #>   method          from     #>   print.landscape simlandr #  A toy network and its landscape Nvar <- 10 m <- rep(0, Nvar) w <- matrix(0.1, Nvar, Nvar) diag(w) <- 0  result1 <- make_2d_Isingland(m, w) plot(result1) ## What if the network becomes denser? result2 <- make_2d_Isingland(m, 1.5 * w) plot(result2) ## What if the thresholds become lower? result3 <- make_2d_Isingland(m - 0.5, w) plot(result3) ## Multiple networks together result4 <- make_Ising_grid(   all_thresholds(seq(-0.1, 0.1, 0.1), .f = `+`),   whole_weiadj(seq(0.5, 1.5, 0.5)),   m, w ) %>% make_2d_Isingland_matrix() plot(result4) #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale."},{"path":"https://sciurus365.github.io/Isinglandr/index.html","id":"simulation-on-landscapes","dir":"","previous_headings":"Example","what":"Simulation on landscapes","title":"Landscape Construction and Simulation for Ising Networks","text":"","code":"set.seed(1614) sim1 <- simulate_Isingland(result1, initial = 5) plot(sim1) set.seed(1614) sim4 <- simulate_Isingland(result4, initial = 5) plot(sim4)"},{"path":"https://sciurus365.github.io/Isinglandr/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny app","title":"Landscape Construction and Simulation for Ising Networks","text":"shiny app included package show landscape Ising network major depressive disorder. network parameters can manipulated see influence landscape simulation. Run shiny_Isingland_MDD() start .","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/Isinglandr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Isinglandr: Landscape Construction and Simulation for Ising Networks — Isinglandr-package","title":"Isinglandr: Landscape Construction and Simulation for Ising Networks — Isinglandr-package","text":"toolbox constructing potential landscapes Ising networks. parameters networks can directly supplied users estimated 'IsingFit' package van Borkulo Epskamp (2016) https://CRAN.R-project.org/package=IsingFit empirical data. Ising model's Boltzmann distribution preserved potential landscape function. landscape functions can used quantifying visualizing stability network states, well visualizing simulation process.","code":""},{"path":[]},{"path":"https://sciurus365.github.io/Isinglandr/reference/Isinglandr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Isinglandr: Landscape Construction and Simulation for Ising Networks — Isinglandr-package","text":"Maintainer: Jingmeng Cui jingmeng.cui@outlook.com (ORCID) contributors: Gabriela Lunansky (ORCID) [contributor]","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/MDDNetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation data for the Ising network of major depressive disorder — MDDNetwork","title":"Estimation data for the Ising network of major depressive disorder — MDDNetwork","text":"Estimation data Ising network major depressive disorder","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/MDDNetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation data for the Ising network of major depressive disorder — MDDNetwork","text":"","code":"MDDConnectivity  MDDThresholds"},{"path":"https://sciurus365.github.io/Isinglandr/reference/MDDNetwork.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Estimation data for the Ising network of major depressive disorder — MDDNetwork","text":"object class matrix (inherits array) 9 rows 9 columns. object class numeric length 9.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/MDDNetwork.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Estimation data for the Ising network of major depressive disorder — MDDNetwork","text":"https://figshare.com/projects/Major_depression_as_a_complex_dynamic_system_accepted_for_publication_in_PLoS_ONE_/17360","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/MDDNetwork.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Estimation data for the Ising network of major depressive disorder — MDDNetwork","text":"MDDConnectivity: connectivity strength network, represented weighted adjacency matrix. MDDThresholds: thresholds network nodes, represented vector.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/autolayer.stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ggplot2 layers of stability metrics to add to the landscape plots — autolayer.stability","title":"Get ggplot2 layers of stability metrics to add to the landscape plots — autolayer.stability","text":"layers can show stability metrics calculated landscape.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/autolayer.stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ggplot2 layers of stability metrics to add to the landscape plots — autolayer.stability","text":"","code":"# S3 method for class 'stability_2d_Isingland' autolayer(   object,   point = TRUE,   line = TRUE,   split_value = TRUE,   interval = TRUE,   stability_value = TRUE,   ... )  # S3 method for class 'stability_2d_Isingland_matrix' autolayer(   object,   point = TRUE,   line = TRUE,   split_value = TRUE,   interval = TRUE,   stability_value = TRUE,   ... )"},{"path":"https://sciurus365.github.io/Isinglandr/reference/autolayer.stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ggplot2 layers of stability metrics to add to the landscape plots — autolayer.stability","text":"object stability object calculated calculate_stability() calculate_stability.2d_Isingland(). point, line, split_value, interval, stability_value Show elements layer? Default TRUE . ... use.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/autolayer.stability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ggplot2 layers of stability metrics to add to the landscape plots — autolayer.stability","text":"ggplot layer","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_barrier.Isingland.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate energy barrier for Ising landscapes — calculate_barrier.Isingland","title":"Calculate energy barrier for Ising landscapes — calculate_barrier.Isingland","text":"Calculate energy barrier Ising landscapes","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_barrier.Isingland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate energy barrier for Ising landscapes — calculate_barrier.Isingland","text":"","code":"# S3 method for class '`2d_Isingland`' calculate_barrier(l, ...)  # S3 method for class '`2d_Isingland_matrix`' calculate_barrier(l, ...)  # S3 method for class 'barrier_2d_Isingland' print(x, simplify = FALSE, ...)  # S3 method for class 'barrier_2d_Isingland' summary(object, ...)  # S3 method for class 'barrier_2d_Isingland_matrix' summary(object, ...)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_barrier.Isingland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate energy barrier for Ising landscapes — calculate_barrier.Isingland","text":"l Isingland object constructed make_2d_Isingland() make_2d_Isingland_matrix(). ... use. x result default method summary(). simplify Print simplified version output? Default FALSE. object object summary desired.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_barrier.Isingland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate energy barrier for Ising landscapes — calculate_barrier.Isingland","text":"barrier_Isingland object contains following components: shape character describing shape landscape. local_min_start,local_min_end,saddle_point positions two local minimums saddle point, described list containing: U potential value. location x_index row index get_dist(l). x_value number active nodes. delta_U_start,delta_U_end barrier heights sides.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_barrier.Isingland.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate energy barrier for Ising landscapes — calculate_barrier.Isingland","text":"summary(barrier_2d_Isingland): Return vector barrier heights. summary(barrier_2d_Isingland_matrix): Return tibble barrier heights conditions.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the stability metrics for Ising landscapes — calculate_stability","title":"Calculate the stability metrics for Ising landscapes — calculate_stability","text":"stability calculated based shape potential landscape prior knowledge qualitatively different parts system. Two stability indicators calculated separately, difference used represent general stability system favor first phase. Within phase, potential difference local maximum local minimum (multiple minimums exist, use one phase; local maximum always side phase) used represent stability phase.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the stability metrics for Ising landscapes — calculate_stability","text":"","code":"calculate_stability(l, ...)  # S3 method for class '`2d_Isingland`' calculate_stability(l, split_value = 0.5 * l$Nvar, ...)  # S3 method for class '`2d_Isingland_matrix`' calculate_stability(l, split_value = 0.5 * l$Nvar, ...)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the stability metrics for Ising landscapes — calculate_stability","text":"l Isingland object constructed make_2d_Isingland() make_2d_Isingland_matrix(). ... use. split_value integer specify number active nodes used split two stability ranges. Default half number nodes.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_stability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the stability metrics for Ising landscapes — calculate_stability","text":"calculate_stability.2d_Isingland() Returns calculate_stability.2d_Isingland project, contains following elements: dist distribution tibble input l. effective_minindex1,effective_maxindex1,effective_minindex2,effective_maxindex2 (row)indices dist used positions local minimums maximums two parts. stability1,stability2,stability_diff stability measures first (left) part, second part (right), difference. calculate_stability.2d_Isingland_matrix() Returns stability_2d_Isingland_matrix object, tibble containing columns varying parameters column stability calculate_stability.2d_Isingland objects landscape. print()ed, verbal description stability metrics shown. Use summary() method tidy version outputs.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_stability_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the standard error, confidence interval, and p-value for the stability metrics of an Ising landscape using bootstrapping — calculate_stability_se","title":"Calculate the standard error, confidence interval, and p-value for the stability metrics of an Ising landscape using bootstrapping — calculate_stability_se","text":"Note BCa method used stability differences, percentile method used stability measures individual phases stability measures individual phases highly zero-inflated may crash BCa estimation procedure. range estimation stability measures individual phases interpreted caution.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_stability_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the standard error, confidence interval, and p-value for the stability metrics of an Ising landscape using bootstrapping — calculate_stability_se","text":"","code":"calculate_stability_se(   data,   split_value = 0.5 * ncol(data),   R = 1000,   IsingFit_options = list(plot = FALSE),   Isingland_options = list(),   ... )  # S3 method for class 'stability_se' print(x, ...)  compare_stability(   data1,   data2,   split_value = 0.5 * ncol(data),   R = 1000,   IsingFit_options = list(plot = FALSE),   Isingland_options = list(),   ... )"},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_stability_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the standard error, confidence interval, and p-value for the stability metrics of an Ising landscape using bootstrapping — calculate_stability_se","text":"data matrix binary data split_value integer specify number active nodes used split two stability ranges. Default half number nodes. R number bootstrap replicates.  Usually single     positive integer.  importance resampling, resamples may use     one set weights others use different set weights.      case R vector integers     component gives number resamples rows     weights. IsingFit_options Parameters passed IsingFit::IsingFit() Isingland_options Parameters passed make_2d_Isingland() ... Parameters passed boot::boot() x object class stability_se data1, data2 Two matrices binary data","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_stability_se.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the standard error, confidence interval, and p-value for the stability metrics of an Ising landscape using bootstrapping — calculate_stability_se","text":"Use calculate_stability_se() single dataset, use compare_stability() comparing stability metrics two groups. encounter error message \"Error ((ints)) [inds[ints]] <- tstar[k[inds[ints]]] : missing value TRUE/FALSE needed\", may need install patched version boot.pval package pak::pkg_install(\"Sciurus365/boot.pval@patch-1\"). See https://github.com/mthulin/boot.pval/issues/4. encounter error message \"estimated adjustment '' NA\", probably means increase number bootstrap samples (R). See https://stats.stackexchange.com/questions/37918/---error-estimated-adjustment---na-generated--r-boot-package.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/calculate_stability_se.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the standard error, confidence interval, and p-value for the stability metrics of an Ising landscape using bootstrapping — calculate_stability_se","text":"Puth, M.-T., Neuhäuser, M., & Ruxton, G. D. (2015). variety methods calculating confidence intervals bootstrapping. Journal Animal Ecology, 84(4), 892–897. https://doi.org/10.1111/1365-2656.12382","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/chain_simulate_Isingland.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Ising chains from (a series of) Ising grid(s) and perform a chain simulation. — chain_simulate_Isingland","title":"Make Ising chains from (a series of) Ising grid(s) and perform a chain simulation. — chain_simulate_Isingland","text":"First specify network parameter time points, perform chain simulation based . Ising chain can generated one Ising grid(s) one changing condition .","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/chain_simulate_Isingland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Ising chains from (a series of) Ising grid(s) and perform a chain simulation. — chain_simulate_Isingland","text":"","code":"chain_simulate_Isingland(   Ising_chain,   transform = FALSE,   initial = 0,   beta2 = NULL )  make_Ising_chain(...)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/chain_simulate_Isingland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Ising chains from (a series of) Ising grid(s) and perform a chain simulation. — chain_simulate_Isingland","text":"Ising_chain    Ising_chain object generated make_Ising_chain(). transform default, function considers Ising network use -1 1 two states. Set transform = TRUE Ising network uses 0 1 two states, often case Ising networks estimated using IsingFit::IsingFit(). initial integer indicating initial number active nodes simulation. Float numbers converted integer automatically. beta2 \\(beta\\) value used simulation. default use value landscape construction. Manually setting value can make system easier difficult transition another state, alter steady-state distribution well. ... Ising grid(s) created make_Ising_grid().","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/chain_simulate_Isingland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Ising chains from (a series of) Ising grid(s) and perform a chain simulation. — chain_simulate_Isingland","text":"make_Ising_chain returns Ising_chain object, tibble, row represents set parameters Ising network. chain_simulate_Isingland returns chain_sim_Isingland object, tibble containing parameters, landscape, number active nodes time step.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a 2D landscape for an Ising network — make_2d_Isingland","title":"Make a 2D landscape for an Ising network — make_2d_Isingland","text":"Calculate potential value \\(U(n)\\) system state, represented number active nodes \\(n\\). potential value determined Boltzmann distribution preserved. Boltzmann distribution basis steady-state distribution dynamic methods Ising models, including used IsingSampler::IsingSampler() Glauber dynamics. means assume real-life system steady-state distribution Boltzmann distribution Ising model, possibility \\(n\\) active nodes system proportional \\(e^{U(n)}\\). property \\(e^{U(n)}\\), aligned potential landscape definition Wang et al. (2008) can quantitatively represent stability different system states.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a 2D landscape for an Ising network — make_2d_Isingland","text":"","code":"make_2d_Isingland(thresholds, weiadj, beta = 1, transform = FALSE)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a 2D landscape for an Ising network — make_2d_Isingland","text":"thresholds, weiadj thresholds weighted adjacency matrix Ising network. IsingFit object estimated using IsingFit::IsingFit(), can find two parameters components (<IsingFit>$thresholds <IsingFit>$weiadj). beta \\(\\beta\\) value calculating Hamiltonian. transform default, function considers Ising network use -1 1 two states. Set transform = TRUE Ising network uses 0 1 two states, often case Ising networks estimated using IsingFit::IsingFit().","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a 2D landscape for an Ising network — make_2d_Isingland","text":"2d_Isingland object contains following components: dist_raw,dist Two tibbles containing probability distribution potential values different states. thresholds,weiadj,beta parameters supplied function. Nvar number variables (nodes) Ising network.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a 2D landscape for an Ising network — make_2d_Isingland","text":"potential function \\(U(n)\\) calculated following equation: $$U(n) = -\\log(\\sum_{v}^{(v)=n} e^{-\\beta H(v)})/\\beta,$$ \\(v\\) represent specific activation state network, \\((v)\\) number active nodes \\(v\\), \\(H\\) Hamiltonian function Ising networks.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Make a 2D landscape for an Ising network — make_2d_Isingland","text":"Wang, J., Xu, L., & Wang, E. (2008). Potential landscape flux framework nonequilibrium networks: Robustness, dissipation, coherence biochemical oscillations. Proceedings National Academy Sciences, 105(34), 12271-12276. https://doi.org/10.1073/pnas.0800579105 Sacha Epskamp (2020). IsingSampler: Sampling methods distribution functions Ising model. R package version 0.2.1. https://CRAN.R-project.org/package=IsingSampler Glauber, R. J. (1963). Time-dependent statistics Ising model. Journal Mathematical Physics, 4(2), 294-307. https://doi.org/10.1063/1.1703954","code":""},{"path":[]},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a 2D landscape for an Ising network — make_2d_Isingland","text":"","code":"Nvar <- 10 m <- rep(0, Nvar) w <- matrix(0.1, Nvar, Nvar) diag(w) <- 0 result1 <- make_2d_Isingland(m, w) #> The Ising network uses -1 and 1 for two states. If it uses 0 and 1, (which is #> often the case for psychological datasets), set `transform = TRUE`. #> This message is displayed once every 8 hours. plot(result1)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a matrix of landscapes for multiple Ising networks — make_2d_Isingland_matrix","title":"Make a matrix of landscapes for multiple Ising networks — make_2d_Isingland_matrix","text":"Make multiple landscapes together different parameters.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a matrix of landscapes for multiple Ising networks — make_2d_Isingland_matrix","text":"","code":"make_2d_Isingland_matrix(Ising_grid, transform = FALSE)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a matrix of landscapes for multiple Ising networks — make_2d_Isingland_matrix","text":"Ising_grid Parameter values generated make_Ising_grid(). transform default, function considers Ising network use -1 1 two states. Set transform = TRUE Ising network uses 0 1 two states, often case Ising networks estimated using IsingFit::IsingFit().","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a matrix of landscapes for multiple Ising networks — make_2d_Isingland_matrix","text":"2d_Isingland_matrix object contains following components: dist_raw,dist Two tibbles containing probability distribution potential values different states. Nvar number variables (nodes) Ising network.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_2d_Isingland_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a matrix of landscapes for multiple Ising networks — make_2d_Isingland_matrix","text":"","code":"Nvar <- 10 m <- rep(0, Nvar) w <- matrix(0.1, Nvar, Nvar) diag(w) <- 0 result4 <- make_Ising_grid(   all_thresholds(seq(-0.1, 0.1, 0.1), .f = `+`),   whole_weiadj(seq(0.5, 1.5, 0.5)),   m, w ) %>% make_2d_Isingland_matrix() plot(result4) #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale."},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_3d_Isingland.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a 3D landscape for an Ising network — make_3d_Isingland","title":"Make a 3D landscape for an Ising network — make_3d_Isingland","text":"Similar make_2d_Isingland(), two categories nodes can specified number active nodes can calculated separately.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_3d_Isingland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a 3D landscape for an Ising network — make_3d_Isingland","text":"","code":"make_3d_Isingland(thresholds, weiadj, x, y, beta = 1, transform = FALSE)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_3d_Isingland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a 3D landscape for an Ising network — make_3d_Isingland","text":"thresholds, weiadj thresholds weighted adjacency matrix Ising network. IsingFit object estimated using IsingFit::IsingFit(), can find two parameters components (<IsingFit>$thresholds <IsingFit>$weiadj). x, y Two vectors specifying indices names nodes two categories. character vectors, names match row names thresholds matrix. beta \\(\\beta\\) value calculating Hamiltonian. transform default, function considers Ising network use -1 1 two states. Set transform = TRUE Ising network uses 0 1 two states, often case Ising networks estimated using IsingFit::IsingFit().","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_3d_Isingland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a 3D landscape for an Ising network — make_3d_Isingland","text":"3d_Isingland object contains following components: dist_raw,dist Two tibbles containing probability distribution potential values different states. thresholds,weiadj,beta parameters supplied function. Nvar number variables (nodes) Ising network.","code":""},{"path":[]},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_Ising_grid-control-functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Functions to Specify the Varying Parameters for an Ising Grid. — make_Ising_grid-control-functions","title":"Control Functions to Specify the Varying Parameters for an Ising Grid. — make_Ising_grid-control-functions","text":"Control Functions Specify Varying Parameters Ising Grid.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_Ising_grid-control-functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Functions to Specify the Varying Parameters for an Ising Grid. — make_Ising_grid-control-functions","text":"","code":"single_threshold(pos, seq, .f = `*`)  single_wei(pos, seq, .f = `*`)  all_thresholds(seq, .f = `*`)  whole_weiadj(seq, .f = `*`)  beta_list(seq, .f = `*`)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_Ising_grid-control-functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Functions to Specify the Varying Parameters for an Ising Grid. — make_Ising_grid-control-functions","text":"pos position single threshold weight value vary across Ising networks. single number single_threshold() numeric vector length 2 single_wei(). seq vector specify values. Can generated base::seq(). .f calculation done seq original threshold value(s) original weight(ed adjacency matrix)? * default, means values supplied seq multiplied original value, vector, matrix.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_Ising_grid-control-functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Functions to Specify the Varying Parameters for an Ising Grid. — make_Ising_grid-control-functions","text":"ctrl_* object specifying varying parameters.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_Ising_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Grid to Specify Multiple Ising Networks — make_Ising_grid","title":"Make a Grid to Specify Multiple Ising Networks — make_Ising_grid","text":"Specify one two varying parameters Ising networks. output make_Ising_grid() can used make landscapes multiple networks.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_Ising_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Grid to Specify Multiple Ising Networks — make_Ising_grid","text":"","code":"make_Ising_grid(par1, par2 = NULL, thresholds, weiadj, beta = 1)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_Ising_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Grid to Specify Multiple Ising Networks — make_Ising_grid","text":"par1, par2 Generated one single_threshold(), all_thresholds(), single_wei(), [whole_weiadj()], [beta_list()]. Use par2 = NULL` want vary one parameter. thresholds, weiadj thresholds weighted adjacency matrix Ising network. IsingFit object estimated using IsingFit::IsingFit(), can find two parameters components (<IsingFit>$thresholds <IsingFit>$weiadj). beta \\(\\beta\\) value calculating Hamiltonian.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_Ising_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Grid to Specify Multiple Ising Networks — make_Ising_grid","text":"Ising_grid object based tibble contains information simulation conditions.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/make_Ising_grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a Grid to Specify Multiple Ising Networks — make_Ising_grid","text":"five possible ways vary parameters Ising networks, corresponding five control functions: single_threshold() Vary threshold value single variable. all_thresholds() Vary threshold values together. single_wei() Vary single weight value path two variables. whole_weiadj() Vary whole weighted adjacency matrix. beta_list() Use list different beta values. See make_Ising_grid-control-functions details.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://sciurus365.github.io/Isinglandr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autolayer simlandr calculate_barrier","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/shiny_Isingland_MDD.html","id":null,"dir":"Reference","previous_headings":"","what":"A shiny app that shows the landscape for the Ising network of major depressive disorder — shiny_Isingland_MDD","title":"A shiny app that shows the landscape for the Ising network of major depressive disorder — shiny_Isingland_MDD","text":"shiny app shows landscape Ising network major depressive disorder","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/shiny_Isingland_MDD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A shiny app that shows the landscape for the Ising network of major depressive disorder — shiny_Isingland_MDD","text":"","code":"shiny_Isingland_MDD(...)"},{"path":"https://sciurus365.github.io/Isinglandr/reference/shiny_Isingland_MDD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A shiny app that shows the landscape for the Ising network of major depressive disorder — shiny_Isingland_MDD","text":"... use.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/shiny_Isingland_MDD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A shiny app that shows the landscape for the Ising network of major depressive disorder — shiny_Isingland_MDD","text":"function opens Shiny app session without return value.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/simulate_Isingland.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a 2D Ising landscape — simulate_Isingland","title":"Simulate a 2D Ising landscape — simulate_Isingland","text":"Perform numeric simulation using landscape. simulation performed using similar algorithm Glauber dynamics, transition possibility determined difference potential function, steady-state distribution Boltzmann distribution (setting beta2). Note , conditional transition possibility simulation may different Glauber dynamics simulation methods.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/simulate_Isingland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a 2D Ising landscape — simulate_Isingland","text":"","code":"simulate_Isingland(l, ...)  # S3 method for class '`2d_Isingland`' simulate_Isingland(   l,   mode = \"single\",   initial = 0,   length = 100,   beta2 = l$beta,   ... )  # S3 method for class '`2d_Isingland_matrix`' simulate_Isingland(   l,   mode = \"single\",   initial = 0,   length = 100,   beta2 = NULL,   ... )"},{"path":"https://sciurus365.github.io/Isinglandr/reference/simulate_Isingland.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a 2D Ising landscape — simulate_Isingland","text":"l Isingland object constructed make_2d_Isingland() make_2d_Isingland_matrix(). ... use. mode One \"single\", \"distribution\". want simulate state single system stochastically simulate distribution states? \"single\" used default. initial integer indicating initial number active nodes simulation. Float numbers converted integer automatically. length integer indicating simulation length. beta2 \\(beta\\) value used simulation. default use value landscape construction. Manually setting value can make system easier difficult transition another state, alter steady-state distribution well.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/simulate_Isingland.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a 2D Ising landscape — simulate_Isingland","text":"sim_Isingland object following components: output tibble simulation output. landscape landscape object supplied function. mode character representing mode simulation.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/simulate_Isingland.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a 2D Ising landscape — simulate_Isingland","text":"simulation step, system can one active node, one less active node, number active nodes (possible; nodes already active possible one active node). possibility three cases determined potential function: $$P(n_{t}=b|n_{t-1}=) = \\frac{e^{-\\beta U(b)}}{\\sum_{\\\\{-1,,+1\\},0\\leq \\leq N}e^{-\\beta U()}}, \\ \\mathrm{} \\ b\\\\{-1,,+1\\}\\ \\&\\ 0\\leq \\leq N; 0, \\mathrm{otherwise},$$ \\(n_{t}\\) number active nodes time \\(t\\), \\(U(n)\\) potential function.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/reference/simulate_Isingland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a 2D Ising landscape — simulate_Isingland","text":"","code":"if (FALSE) { # interactive() Nvar <- 10 m <- rep(0, Nvar) w <- matrix(0.1, Nvar, Nvar) diag(w) <- 0 result1 <- make_2d_Isingland(m, w) plot(result1)  set.seed(1614) sim1 <- simulate_Isingland(result1, initial = 5) plot(sim1) }"},{"path":"https://sciurus365.github.io/Isinglandr/news/index.html","id":"development-version-aimed-for-isinglandr-020","dir":"Changelog","previous_headings":"","what":"Development version (aimed for Isinglandr 0.2.0)","title":"Development version (aimed for Isinglandr 0.2.0)","text":"Added functions calculate_stability_se() compare_stability() calculating standard error stability metrics comparing stability metrics two networks, respectively. Added autolayer.stability_2d_Isingland_matrix() method. structure stability_2d_Isingland_matrix objects changes slightly accommodate new method. Users may need re-generate previously stability_2d_Isingland_matrix objects function now allows character values x y arguments.","code":""},{"path":"https://sciurus365.github.io/Isinglandr/news/index.html","id":"isinglandr-011","dir":"Changelog","previous_headings":"","what":"Isinglandr 0.1.1","title":"Isinglandr 0.1.1","text":"CRAN release: 2023-07-12 Load data Shiny app environment; Check gifski installed, required render animations (also added gifski suggested package).","code":""},{"path":"https://sciurus365.github.io/Isinglandr/news/index.html","id":"isinglandr-010","dir":"Changelog","previous_headings":"","what":"Isinglandr 0.1.0","title":"Isinglandr 0.1.0","text":"CRAN release: 2023-02-10 Initial release.","code":""}]
